{"version":3,"file":"cms.56bd8f55366d624a15ae.hot-update.js","sources":["webpack:///./src/components/Nav.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Location } from '@reach/router'\nimport { Link } from 'gatsby'\nimport { Menu, X } from 'react-feather'\nimport Logo from './Logo'\n\nimport './Nav.css'\n\nexport class Navigation extends Component {\n  state = {\n    active: false,\n    activeSubNav: false,\n    currentPath: false\n  }\n\n  componentDidMount = () =>\n    this.setState({ currentPath: this.props.location.pathname })\n\n  handleMenuToggle = () => this.setState({ active: !this.state.active })\n\n  // Only close nav if it is open\n  handleLinkClick = () => this.state.active && this.handleMenuToggle()\n  // keyboard events\n  handleLinkKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      this.state.active && this.handleMenuToggle()\n    }\n  }\n\n  toggleSubNav = subNav =>\n    this.setState({\n      activeSubNav: this.state.activeSubNav === subNav ? false : subNav\n    })\n  keyToggleSubNav = (e, subNav) => {\n    // key o is for open so you can enter key to open\n    if (e.keyCode === 79 || e.keyCode === 27) {\n      this.toggleSubNav(subNav)\n    }\n  }\n  render() {\n    const { active } = this.state,\n      { subNav } = this.props,\n      NavLink = ({ to, className, children, ...props }) => (\n        <Link\n          to={to}\n          className={`NavLink ${\n            to === this.state.currentPath ? 'active' : ''\n          } ${className}`}\n          onClick={this.handleLinkClick}\n          onKeyDown={this.handleLinkKeyDown}\n          tabIndex={0}\n          aria-label=\"Navigation\"\n          role=\"button\"\n          {...props}\n        >\n          {children}\n        </Link>\n      )\n\n    return (\n      <nav className={`Nav ${active ? 'Nav-active' : ''}`}>\n        <div className=\"Nav--Container container\">\n          <Link\n            to=\"/\"\n            onClick={this.handleLinkClick}\n            onKeyDown={this.handleLinkKeyDown}\n            tabIndex={0}\n            aria-label=\"Navigation\"\n            role=\"button\"\n          >\n            <Logo />\n          </Link>\n          <div className=\"Nav--Links\">\n            <NavLink to=\"/\">Home</NavLink>\n            <NavLink to=\"/about/\">About</NavLink>\n\n\n\n\n\n            <div\n              className={`Nav--Group ${\n                this.state.activeSubNav === 'posts' ? 'active' : ''\n              }`}\n            >\n              <span\n                className={`NavLink Nav--GroupParent ${\n                  this.props.location.pathname.includes('posts') ||\n                  this.props.location.pathname.includes('blog') ||\n                  this.props.location.pathname.includes('post-categories')\n                    ? 'active'\n                    : ''\n                }`}\n                onClick={() => this.toggleSubNav('posts')}\n                onKeyDown={e => this.keyToggleSubNav(e, 'posts')}\n                tabIndex={0}\n                aria-label=\"Navigation\"\n                role=\"button\"\n              >\n                Services\n                <div className='Nav--GroupLinks'>\n                <NavLink to=\"/staging/\" className=\"Nav--GroupLink\">\n                    Home Staging\n                  </NavLink>\n                  <NavLink to=\"/makeover/\" className=\"Nav--GroupLink\">\n                    Home Makeovers\n                  </NavLink>\n                </div>\n                \n              \n                \n              </span>\n            </div>\n            <NavLink to=\"/post-categories/our-work\">Our Work</NavLink>\n            <NavLink to=\"/contact/\">Contact</NavLink>\n          </div>\n          <button\n            className=\"Button-blank Nav--MenuButton\"\n            onClick={this.handleMenuToggle}\n            tabIndex={0}\n            aria-label=\"Navigation\"\n          >\n            {active ? <X /> : <Menu />}\n          </button>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default ({ subNav }) => (\n  <Location>{route => <Navigation subNav={subNav} {...route} />}</Location>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AAOA;AACA;AAAA;AADA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AACA;AAXA;AAaA;AAAA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AApBA;AAqBA;AAEA;AADA;AADA;AACA;AAtBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AACA;AADA;AACA;AADA;AA+BA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAxHA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAyHA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AADA;;;;;;;;;;AA1HA;;;;;;;;;;;;;;A","sourceRoot":""}